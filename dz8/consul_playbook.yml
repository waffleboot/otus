---
- hosts:
    - db
    - nginx
    - backend
  become: yes
  gather_facts: no
  vars:
    consul_version: 1.17.1
    consul_archive: consul_{{ consul_version }}_linux_amd64.zip
  tasks:
    - ansible.builtin.systemd:
        name: consul
        state: stopped
      ignore_errors: yes
    - file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/consul.d
        - /var/lib/consul
    - name: create group
      ansible.builtin.group:
        name: consul
    - name: create user
      ansible.builtin.user:
        name: consul
        group: consul
        create_home: no
        system: yes
    - name: download consul {{ consul_version }}
      ansible.builtin.get_url:
        url: https://hashicorp-releases.yandexcloud.net/consul/{{ consul_version }}/{{ consul_archive }}
        dest: /tmp/{{ consul_archive }}
    - name: install addons
      ansible.builtin.yum:
        state: latest
        pkg:
          - unzip
          - telnet
          - bind-utils
    - name: unzip {{ consul_archive }}
      ansible.builtin.unarchive:
        src: /tmp/{{ consul_archive }}
        dest: /usr/local/bin
        owner: consul
        group: consul
        remote_src: yes
    - name: create /etc/consul.d directory
      file:
        path: /etc/consul.d
        state: directory
        owner: consul
        group: consul
        mode: '0775'
    - name: create /var/lib/consul directory
      file:
        path: /var/lib/consul
        state: directory
        owner: consul
        group: consul
        mode: '0775'

- hosts:
    - db
  become: yes
  gather_facts: no
  tasks:
    - name: create consul config
      ansible.builtin.copy:
        dest: /etc/consul.d/config.json
        owner: consul
        group: consul
        content: |
          {
            "bootstrap_expect": 2,
            "client_addr": "0.0.0.0",
            "node_name": "{{ inventory_hostname_short }}",
            "data_dir": "/var/lib/consul",
            "encrypt": "wHFWVHTstpfh08ZflUs4FD2FAMueraoCN2LyqmeLxV0=",
            "retry_join": [{{ groups['db'] | map('to_json') | join(',') }}],
            "server": true,
            "ui_config": { "enabled": true }
          }
    - name: systemd service
      ansible.builtin.copy:
        dest: /etc/systemd/system/consul.service
        content: |
          [Unit]
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=simple
          User=consul
          Group=consul
          ExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d
          ExecReload=/bin/kill -HUP $MAINPID
          KillSignal=SIGINT
          TimeoutStopSec=5
          Restart=on-failure
          SyslogIdentifier=consul

          [Install]
          WantedBy=multi-user.target
    - ansible.builtin.systemd:
        name: consul
        state: restarted
        daemon-reload: yes
        enabled: yes

- hosts:
    - backend
  become: yes
  gather_facts: no
  tasks:
    - name: create consul config
      ansible.builtin.copy:
        dest: /etc/consul.d/config.json
        owner: consul
        group: consul
        content: |
          {
            "client_addr": "0.0.0.0",
            "node_name": "{{ inventory_hostname_short }}",
            "data_dir": "/var/lib/consul",
            "encrypt": "wHFWVHTstpfh08ZflUs4FD2FAMueraoCN2LyqmeLxV0=",
            "retry_join": [{{ groups['db'] | map('to_json') | join(',') }}],
            "service": {
              "name": "webapp",
              "check": {
                "name": "webapp healthcheck",
                "tcp": "localhost:{{ backend_http_port }}",
                "interval": "10s",
                "timeout": "2s"
              }
            }
          }
    - name: systemd service
      ansible.builtin.copy:
        dest: /etc/systemd/system/consul.service
        content: |
          [Unit]
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=simple
          User=consul
          Group=consul
          ExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d
          ExecReload=/bin/kill -HUP $MAINPID
          KillSignal=SIGINT
          TimeoutStopSec=5
          Restart=on-failure
          SyslogIdentifier=consul

          [Install]
          WantedBy=multi-user.target
    - ansible.builtin.systemd:
        name: consul
        state: restarted
        daemon-reload: yes
        enabled: yes

- hosts:
    - nginx
  become: yes
  gather_facts: no
  tasks:
    - name: create consul config
      ansible.builtin.copy:
        dest: /etc/consul.d/config.json
        owner: consul
        group: consul
        content: |
          {
            "client_addr": "0.0.0.0",
            "node_name": "{{ inventory_hostname_short }}",
            "data_dir": "/var/lib/consul",
            "encrypt": "wHFWVHTstpfh08ZflUs4FD2FAMueraoCN2LyqmeLxV0=",
            "retry_join": [{{ groups['db'] | map('to_json') | join(',') }}]
          }
    - name: systemd service
      ansible.builtin.copy:
        dest: /etc/systemd/system/consul.service
        content: |
          [Unit]
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=simple
          User=consul
          Group=consul
          ExecStart=/usr/local/bin/consul agent -config-dir=/etc/consul.d
          ExecReload=/bin/kill -HUP $MAINPID
          KillSignal=SIGINT
          TimeoutStopSec=5
          Restart=on-failure
          SyslogIdentifier=consul

          [Install]
          WantedBy=multi-user.target
    - ansible.builtin.systemd:
        name: consul
        state: restarted
        daemon-reload: yes
        enabled: yes
    - ansible.builtin.iptables:
        table: nat
        chain: PREROUTING
        protocol: "{{ item }}"
        match: "{{ item }}"
        destination_port: 53
        jump: REDIRECT
        to_ports: 8600
      with_items:
        - udp
        - tcp
    - ansible.builtin.iptables:
        table: nat
        chain: OUTPUT
        protocol: "{{ item }}"
        match: "{{ item }}"
        destination_port: 53
        jump: REDIRECT
        to_ports: 8600
        destination: localhost
      with_items:
        - udp
        - tcp
    - ansible.builtin.copy:
        dest: /etc/resolv.conf
        content: |
          search ru-central1.internal auto.internal
          nameserver 127.0.0.1
          nameserver 192.168.0.2
